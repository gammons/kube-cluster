apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-claim
  namespace: pihole
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-client"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq-claim
  namespace: pihole
  annotations:
    volume.beta.kubernetes.io/storage-class: "nfs-client"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-service
  namespace: pihole
spec:
  loadBalancerIP: 192.168.150.1
  ports:
  - port: 53
    targetPort: 53
    protocol: tcp
  - port: 53
    targetPort: 53
    protocol: udp
  - port: 67
    targetPort: 67
    protocol: udp
  - port: 80
    targetPort: 80
    protocol: tcp
  - port: 443
    targetPort: 443
    protocol: tcp
  selector:
    app: pihole
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole-deploy
  namespace: pihole
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image:  pihole/pihole:latest
        volumeMounts:
        - name: pihole-volume
          mountPath: "/etc/pihole"
        - name: pihole-dnsmasq-volume
          mountPath: "/etc/dnsmasq.d"
        ports:
        - containerPort: 53
        - containerPort: 67
        - containerPort: 80
        - containerPort: 443
        env:
        - name: TZ
          value: "America/New_York"
      volumes:
      - name: pihole-volume
        persistentVolumeClaim:
          claimName: pihole-claim
      - name: pihole-dnsmasq-volume
        persistentVolumeClaim:
          claimName: pihole-dnsmasq-claim

